{
  "permissions": {
    "allow": [
      "Bash(*./target/release/probe:*)",
      "Bash(*./target/debug/probe:*)",
      "Bash(./target/release/probe:*)",
      "Bash(./target/debug/probe:*)",
      "Bash(*./target/release/probe*|*)",
      "Bash(*./target/debug/probe*|*)",
      "Bash(./target/release/probe*)",
      "Bash(./target/debug/probe*)",
      "Bash(DEBUG=1*./target/release/probe*)",
      "Bash(DEBUG=1*./target/debug/probe*)",
      "Bash(RUST_LOG=*./target/release/probe*)",
      "Bash(RUST_LOG=*./target/debug/probe*)",
      "Bash(LSP_LOG=*./target/release/probe*)",
      "Bash(LSP_LOG=*./target/debug/probe*)",
      "Bash(PROBE_*./target/release/probe*)",
      "Bash(PROBE_*./target/debug/probe*)",
      "Bash(*probe extract*)",
      "Bash(*probe search*)",
      "Bash(*probe lsp*)",
      "Bash(time*probe*)",
      "Bash(*time*./target/release/probe*)",
      "Bash(*time*./target/debug/probe*)",
      "Bash(cargo build:*)",
      "Bash(cargo check:*)",
      "Bash(cargo test:*)",
      "Bash(cargo run -- *)",
      "Bash(make:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(jq:*)",
      "Bash(find:*)",
      "Bash(tree:*)",
      "Bash(echo:*)",
      "Bash(pwd)",
      "Bash(env)",
      "Bash(git status:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git add:*)",
      "Bash(git commit -m:*)",
      "Bash(git push origin:*)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(git checkout:*)",
      "Bash(git stash:*)",
      "Bash(gh pr:*)",
      "Bash(gh issue:*)",
      "Bash(gh run:*)",
      "Bash(gh api:*)",
      "Bash(gh repo:*)",
      "Bash(mkdir:*)",
      "Bash(touch:*)",
      "Bash(chmod +x:*)",
      "Bash(sed:*)",
      "Bash(kill:*)",
      "Bash(killall:*)",
      "Bash(pgrep:*)",
      "Bash(pkill:*)",
      "Bash(timeout:*)",
      "Bash(time:*)",
      "Bash(rust-analyzer:*)",
      "Bash(rustc:*)",
      "Bash(npm install)",
      "Bash(npm run:*)",
      "Bash(npm config:*)",
      "Bash(npx:*)",
      "Bash(node:*)",
      "Bash(python3:*)",
      "Bash(go build:*)",
      "Bash(go mod:*)",
      "Bash(go list:*)",
      "Bash(gopls:*)",
      "Bash(typescript-language-server:*)",
      "Bash(./test_*.sh)",
      "Bash(probe:*)",
      "Bash(mcp:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:modelcontextprotocol.io)",
      "WebFetch(domain:go.dev)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:rust-lang.org)",
      "WebSearch",
      "mcp__big-brain__ask_big_brain",
      "mcp__code-search__search_code",
      "mcp__code-search__extract_code",
      "mcp__code-search__query_code",
      "Bash(bash -lc:*)"
    ],
    "deny": [
      "Bash(git commit --no-verify:*)",
      "Bash(git commit -n:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(git push --force-with-lease:*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~)",
      "Bash(rm -rf ~/*)",
      "Bash(rm -rf .)",
      "Bash(rm -rf ..)",
      "Bash(rm -rf *)",
      "Bash(rm -fr:*)",
      "Bash(git reset --hard HEAD~:*)",
      "Bash(git clean -fdx)",
      "Bash(git clean -ffdx)",
      "Bash(sudo:*)",
      "Bash(chmod 777:*)",
      "Bash(chmod -R 777:*)",
      "Bash(dd if=/dev/zero:*)",
      "Bash(dd if=/dev/random:*)",
      "Bash(mkfs:*)",
      "Bash(git filter-branch:*)",
      "Bash(cargo clean)",
      "Bash(npm cache clean --force)",
      "Bash(truncate -s 0:*)",
      "Bash(history -c)",
      "Bash(git reflog expire:*)"
    ]
  },
  "hooks": {
    "Stop": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "bash -lc 'repo_root=\"$(git rev-parse --show-toplevel 2>/dev/null || pwd)\"; trap \"cd \\\"$repo_root\\\"; [ -f AGENT_CONSENT.md ] && [ -e .AGENT_CONSENT ] && rm -f .AGENT_CONSENT || true\" EXIT; cd \"$repo_root\"; [ ! -f AGENT_CONSENT.md ] || [ -e .AGENT_CONSENT ] || { cat AGENT_CONSENT.md >&2; exit 1; }'"
          }
        ]
      }
    ]
  }
}
